<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="general_8c" kind="file" language="C++">
    <compoundname>general.c</compoundname>
    <includes refid="main_8h" local="yes">main.h</includes>
    <incdepgraph>
      <node id="11">
        <label>affichage.h</label>
        <link refid="affichage_8h_source"/>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>sous-menus.h</label>
        <link refid="sous-menus_8h_source"/>
      </node>
      <node id="5">
        <label>conio.h</label>
      </node>
      <node id="15">
        <label>autre.h</label>
        <link refid="autre_8h_source"/>
      </node>
      <node id="1">
        <label>general.c</label>
        <link refid="general_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>general.h</label>
        <link refid="general_8h_source"/>
      </node>
      <node id="18">
        <label>gestionFichier.h</label>
        <link refid="gestion_fichier_8h_source"/>
      </node>
      <node id="16">
        <label>ia.h</label>
        <link refid="ia_8h_source"/>
      </node>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>tableau.h</label>
        <link refid="tableau_8h_source"/>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="14">
        <label>formatageChaine.h</label>
        <link refid="formatage_chaine_8h_source"/>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>gestionCarte.h</label>
        <link refid="gestion_carte_8h_source"/>
      </node>
      <node id="10">
        <label>acquisition.h</label>
        <link refid="acquisition_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="general_8c_1a7a3238715d030c42dde5f4539c9ca3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialisation</definition>
        <argsstring>(int nbLigneFenetre, int nbColloneFenetre)</argsstring>
        <name>initialisation</name>
        <param>
          <type>int</type>
          <declname>nbLigneFenetre</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbColloneFenetre</declname>
        </param>
        <briefdescription>
<para>fonction qui gère l&apos;initialitation et le lancement du programme </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nbLigneFenetre</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille verticale de la fenêtre </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbColloneFenetre</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille horizonotale de la fenêtre </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="3" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="3" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1adfbaa271f44d828c6a42ce7e9affee88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void menuPrincipal</definition>
        <argsstring>()</argsstring>
        <name>menuPrincipal</name>
        <briefdescription>
<para>fonction qui gère le debut de la partie </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; contrôle d&apos;acquisition avec réaffichage de l&apos;interfface</para>
<para>&lt;executer la fonction nouvelle partie</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="8" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="8" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1a1faac25606ba09c4cdbcf54a142dbe0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nouvellePartie</definition>
        <argsstring>(char *pseudo[], Joueur utilisateur, int *pStatistique, int infoEcritureFicher[])</argsstring>
        <name>nouvellePartie</name>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pStatistique</declname>
        </param>
        <param>
          <type>int</type>
          <declname>infoEcritureFicher</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>lancement d&apos;une nouvelle partie </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[] : tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueuer</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>*pStatistique : pointeur sur un tableau 4*4 qui contient des statistique sur chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>infoEcritureFichier[] : tableau contenant les info qui devront etre écrite dans le fichier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int : nombre de manche jusqu&apos;a la victoir d&apos;une équipe </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; On change l&apos;affichage pour avoir un affichage plus simple a lire lors d&apos;une partie entre 4 ordinateur</para>
<para>&lt; a suprimer une fois de debug fini</para>
<para>&lt; Fin de partie</para>
<para>&lt; affichage des resultat</para>
<para>&lt; L&apos;utilisatuer et nord gagnent</para>
<para>&lt; est et touest gagnent</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="91" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="91" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1a82e65877686a049b4bee9160af15c97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char manche</definition>
        <argsstring>(char *pseudo[], int score[], Joueur dealer, Joueur utilisateur, int *pStatistique)</argsstring>
        <name>manche</name>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>dealer</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pStatistique</declname>
        </param>
        <briefdescription>
<para>lancement d&apos;une manche </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[] : tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>score[] : tableau contenant les scores des joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>dealer : joueur qui distibue les cartes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueuer</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>*pStatistique : pointeur sur un tableau 4*4 qui contient des statistique sur chaque joueur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char : 0 si tout le monde passe, 1 si la manche a bien lieu </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; tableau qui stocke les anonce de chaque joueur, on y ajoute 1 pour le roi d&apos;atout puis 1 pour la dame d&apos;atout</para>
<para>&lt; distribution des cartes</para>
<para>&lt; On cherche si les joueurs on des anonce a faire</para>
<para>&lt; On passe a la phase suivante uniquement si un contrat a ete pris sinon on relance une manche</para>
<para>&lt; si un joueur a fait une belote rebelote il gagne 20 point</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="180" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="180" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1a6eeea9d2fea8b2c504b0051af39f7c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
        <definition>Contrat annonceContrat</definition>
        <argsstring>(char *pseudo[], Joueur dealer, Carte *pCarteMain, Joueur utilisateur)</argsstring>
        <name>annonceContrat</name>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>dealer</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pCarteMain</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <briefdescription>
<para>gère l&apos;annonce et la surenchère des contats par les joueurs </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>dealer : joueur qui distibue les cartes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pCarteMain : pointeur sur le tableau qui stocke les cartes dans la main de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueuer</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_contrat" kindref="compound">Contrat</ref> : contrat final qui a ete choisi pour la partie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Affichage du choix du joueur</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="279" column="9" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="279" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1abde08a751131f9afc15de6fc616348f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
        <definition>Contrat proposeContrat</definition>
        <argsstring>(Contrat dernierContrat, Joueur parle, char *pseudo[], Carte *pCarteMain, Joueur utilisateur)</argsstring>
        <name>proposeContrat</name>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>dernierContrat</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>parle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pCarteMain</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <briefdescription>
<para>proposition d&apos;un contrat par un joueur </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>dernierContrat : dernier contrat proposé </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>parle : joueur qui parle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pCarteMain : pointeur sur le tableau qui stocke les cartes dans la main de chaque joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_contrat" kindref="compound">Contrat</ref> : nouveau contrat proposé par le joueur </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; acquisition par l&apos;utilisateur</para>
<para>&lt; choix par l&apos;ia d&apos;un contrat</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="363" column="9" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="363" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1a09dedac7ae460c4fd07ebcc4af44568f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Joueur</type>
        <definition>Joueur pli</definition>
        <argsstring>(Contrat contrat, Joueur premierAJouer, char *pseudo[], Carte *pCarteMain, int pointManche[], int pointAnonce[], char belote[], Carte cartePli[], Carte carteAncienPli[], int score[], Joueur utilisateur, int numPli)</argsstring>
        <name>pli</name>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>contrat</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>premierAJouer</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pCarteMain</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pointManche</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>pointAnonce</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>belote</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>cartePli</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>carteAncienPli</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numPli</declname>
        </param>
        <briefdescription>
<para>fonction qui gère un pli </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>contrat : contrat qui a été choisipour cette manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>premierAjouer : premier joueur a jouer dans le pli </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeur contenant les pseudo des différents joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pCarteMain : pointeur sur le tableau qui stocke les carte dans la main de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointManche[] : tableau contenant les point de chaque joueur dans la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointAnonce[] : tableau contenant les point d&apos;anonce de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>belote[] : tableau contenant les ancone belote rebelote de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>cartePli[] : tableau contenant les 4 carte du pli </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>carteAncienPli[] : tableau contenant les carte du pli précédent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>score[] : tableau qui contient les score de la partie </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Joueur : le vainceur du pli </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; interface de pli Utilisateur</para>
<para>&lt; interface de pli ordinateur</para>
<para>&lt; on regarde si une dame ou un roi d&apos;atout vien d&apos;etre jouer pour ajouter au tableau belote[]</para>
<para>&lt; affichage de la carte qui vien d&apos;etre jouée</para>
<para>&lt; 10 de der, on ajoute 10 point au vainceur si on est dans le dernier pli</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="382" column="8" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="382" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1a6c7b2721ebd2ba9c2cdd0d452f8cbe3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poseCarte</definition>
        <argsstring>(Joueur joueur, int numCarte, Carte *pMainJoueurs, Carte pli[], int carteRestante)</argsstring>
        <name>poseCarte</name>
        <param>
          <type>Joueur</type>
          <declname>joueur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numCarte</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pMainJoueurs</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>pli</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>carteRestante</declname>
        </param>
        <briefdescription>
<para>fonction qui verifie la validité d&apos;une carte est la pose </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>variable qui defini la position du joueur qui effectue l&apos;action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numCarte</parametername>
</parameternamelist>
<parameterdescription>
<para>variable qui defini la carte choisie par le joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pMainJoueurs</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointeur qui renvoie vers le tableau de la main de tous les joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pPli</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointeur qui renvoie vers le tableau des carte jouées dans le pli </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="455" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="455" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="general_8c_1ae2494afb9457cbcf96753839016abbb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char calculPointManche</definition>
        <argsstring>(Contrat contrat, int pointManche[], int pointAnonce[], int pointBelote[], int score[], char *pseudo[], Joueur utilisateur)</argsstring>
        <name>calculPointManche</name>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>contrat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pointManche</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>pointAnonce</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>pointBelote</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <briefdescription>
<para>compte les point gagné par chaque joueur au cour de la manche e fonction du contrat et ajoute ces point au tableau qui contient tout les score de la partie </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>contrat : contrat qui a été choisi durant la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointManche[] : tableau qui contient les points de la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointAnonce[] : tableau qui contient les points d&apos;anonce de la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointBelote[] : tableau contenant les point de belote rebelote de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>score[] : tableau qui contient les score de la partie </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeur contenant les pseudo des différents joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char : 1 si le contrtat a été réussi et 0 si le contrat a échoué </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; On reche si le contrat est rampli</para>
<para>&lt; cas ou un des joueur a pris un capot</para>
<para>&lt; cas ou un des joueur a pris une générale</para>
<para>&lt; Le contrat est rempli si le les point de l&apos;équipe est suppérieur a ce qui anoncé et si il on 82 point sans les anonces</para>
<para>&lt; on affiche ce qui c&apos;est passé</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" line="468" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="468" bodyend="568"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initialisation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbLigneFenetre,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbColloneFenetre)</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>modifieTailleFenetre(nbLigneFenetre,<sp/>nbColloneFenetre);</highlight></codeline>
<codeline lineno="6"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>menuPrincipal()</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choix,<sp/>sortie=1,ligne=0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>statistique[5][4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pStatistique<sp/>=<sp/>&amp;statistique[0][0];</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fichier=NULL,<sp/>*fichier2=NULL;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>fichier=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;sauvegarde/gestion_scores_joueurs.csv&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>fichier2=<sp/>fopen(</highlight><highlight class="stringliteral">&quot;sauvegarde/leaderboard.csv&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;r+&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fichier<sp/>==<sp/>NULL<sp/>||<sp/>fichier2<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fichier<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fichier2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pseudo[4][TAILLE_MAXI_PESEUDO+1];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(pseudo[0],</highlight><highlight class="stringliteral">&quot;A_Philipe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(pseudo[1],</highlight><highlight class="stringliteral">&quot;Gilou&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(pseudo[3],</highlight><highlight class="stringliteral">&quot;Tutu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>afficheMenuPrincipal(0);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>acquisitionPseudoAvecMessage(pseudo[SUD-1],</highlight><highlight class="stringliteral">&quot;Choisisez<sp/>votre<sp/>pseudo:&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ligne=ecriturePseudo(pseudo[SUD-1],fichier);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pPseudo[4];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;4;<sp/>i++)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPseudo[i]<sp/>=<sp/>&amp;pseudo[i][0];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choix<sp/>=<sp/>afficheMenuPrincipal(1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(choix)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1<sp/>:{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>infoEcritureFichier[3]<sp/>=<sp/>{0},<sp/>nbVictoire<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nouvellePartie(pPseudo,<sp/>SUD,<sp/>pStatistique,<sp/>infoEcritureFichier);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbVictoire<sp/>=<sp/>ecrireStatistique(fichier,ligne,infoEcritureFichier[1],1);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ecrireStatistique(fichier,ligne,infoEcritureFichier[2],2);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(infoEcritureFichier[1]==1){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ecrireStatistique(fichier,ligne,infoEcritureFichier[0],3);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ecrireLeaderboard(fichier2,pseudo[SUD-1],nbVictoire);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2<sp/>:<sp/></highlight><highlight class="comment">/*executer<sp/>la<sp/>fonction<sp/>leaderboard<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaderboard(fichier2);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3<sp/>:<sp/></highlight><highlight class="comment">/*executer<sp/>la<sp/>fonction<sp/>statistiques<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statistiqueJoueur(fichier,ligne);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4<sp/>:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>joue1000Partie(1000);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5<sp/>:<sp/></highlight><highlight class="comment">/*executer<sp/>la<sp/>fonction<sp/>changement<sp/>d&apos;utilisateur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquisitionPseudoAvecMessage(pseudo[SUD-1],</highlight><highlight class="stringliteral">&quot;Choisissez<sp/>un<sp/>nouveau<sp/>joueur&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ligne=ecriturePseudo(pseudo[SUD-1],fichier);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6<sp/>:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parametre(pPseudo);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>default<sp/>:<sp/></highlight><highlight class="comment">/*executer<sp/>la<sp/>fonction<sp/>quitter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sortie<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fichier);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fichier2);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sortie);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>afficheMenuSelection(</highlight><highlight class="stringliteral">&quot;CREDITS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Ce<sp/>jeu<sp/>a<sp/>ete<sp/>cree<sp/>par<sp/>Florian<sp/>et<sp/>Carlo<sp/>dans<sp/>le<sp/>cadre<sp/>du<sp/>projet<sp/>de<sp/>l&apos;uv<sp/>IFB<sp/>a<sp/>l&apos;UTBM;Ce<sp/>projet<sp/>est<sp/>publie<sp/>sous<sp/>licence<sp/>GNU<sp/>et<sp/>libre<sp/>de<sp/>droit;Voici<sp/>le<sp/>lien<sp/>de<sp/>notre<sp/>GitHub<sp/>ou<sp/>le<sp/>code<sp/>source<sp/>est<sp/>accessible<sp/>a<sp/>tous<sp/>:;https://github.com/Flo3171/<sp/>IFB_projet_Belote;Nous<sp/>vous<sp/>remercions<sp/>d&apos;avoir<sp/>joue<sp/>a<sp/>notre<sp/>jeu<sp/>et<sp/>nous<sp/>esperons<sp/>qu&apos;il<sp/>vous<sp/>aura<sp/>plu&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Appuyer<sp/>sur<sp/>une<sp/>touche<sp/>pour<sp/>continuer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>afficheMenuSelection(</highlight><highlight class="stringliteral">&quot;REMERCIMENTS&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Nous<sp/>remercions<sp/>les<sp/>createurs<sp/>du<sp/>cours<sp/>de<sp/>programmation<sp/>en<sp/>C<sp/>oppenclassroom&apos;s<sp/>qui<sp/>nous<sp/>a<sp/>grandement<sp/>aides<sp/>dans<sp/>ce<sp/>projet;Nous<sp/>remercions<sp/>egalement<sp/>l&apos;ensemble<sp/>des<sp/>forums<sp/>qui<sp/>nous<sp/>a<sp/>permit<sp/>d&apos;obtenir<sp/>des<sp/>reponses<sp/>a<sp/>nos<sp/>problemes<sp/>et<sp/>de<sp/>comprendre<sp/>nos<sp/>erreurs;;Un<sp/>grand<sp/>merci<sp/>au<sp/>enseignant<sp/>de<sp/>l&apos;uv<sp/>IFB<sp/>pour<sp/>leurs<sp/>cours<sp/>et<sp/>leurs<sp/>execises<sp/>formateurs;;Des<sp/>remerciments<sp/>speciaux<sp/>a<sp/>V.G,<sp/>C.H<sp/>et<sp/>L.H<sp/>pour<sp/>leurs<sp/>conseils<sp/>et<sp/>les<sp/>debats<sp/>sans<sp/>fin<sp/>a<sp/>propos<sp/>de<sp/>ce<sp/>projet&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Appuyer<sp/>sur<sp/>une<sp/>touche<sp/>pour<sp/>continuer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nouvellePartie(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/>Joueur<sp/>utilisateur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pStatistique,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>infoEcritureFicher[])</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[TAILLE_MAXI_MESSAGE];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbManche<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;cls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(message,<sp/></highlight><highlight class="stringliteral">&quot;Bonjour<sp/>%s,<sp/>vous<sp/>allez<sp/>commencer<sp/>une<sp/>partie<sp/>de<sp/>Belote<sp/>coinchee.;Vous<sp/>etes<sp/>dans<sp/>l&apos;equipe<sp/>Longitude,<sp/>votre<sp/>allie<sp/>est<sp/>%s<sp/>et<sp/>vous<sp/>jouez<sp/>contre<sp/>l&apos;equipe<sp/>Latitude<sp/>qui<sp/>est<sp/>composee<sp/>de<sp/>%s<sp/>et<sp/>%s.;Bonne<sp/>chance&quot;</highlight><highlight class="normal">,pseudo[SUD-1],pseudo[NORD-1],pseudo[EST-1],pseudo[OUEST-1]<sp/></highlight><highlight class="comment">/*pseudo+(EST-1)*(TAILLE_MAXI_PESEUDO+1),<sp/>pseudo+(NORD-1)*(TAILLE_MAXI_PESEUDO+1),<sp/>pseudo+(SUD-1)*(TAILLE_MAXI_PESEUDO+1),<sp/>pseudo+(OUEST-1)*(TAILLE_MAXI_PESEUDO+1)*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheMenuSelection(</highlight><highlight class="stringliteral">&quot;Debut<sp/>de<sp/>la<sp/>partie&quot;</highlight><highlight class="normal">,message,1);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;appuyer<sp/>sur<sp/>une<sp/>touche<sp/>pour<sp/>continuer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(DEBUG_MODE<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;debut<sp/>de<sp/>la<sp/>partie<sp/>\n%s<sp/>et<sp/>%s<sp/>contre<sp/>%s<sp/>et<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pseudo[SUD-1],pseudo[NORD-1],pseudo[EST-1],pseudo[OUEST-1]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>Joueur<sp/>dealer<sp/>=<sp/>nbAleatoire(1,<sp/>4);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(manche(pseudo,<sp/>score,<sp/>dealer,<sp/>utilisateur,<sp/>pStatistique)){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dealer<sp/>=<sp/>joueurSuivant(dealer);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbManche<sp/>++;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MODE_1_MANCHE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score[NORD<sp/>-<sp/>1]<sp/>+=<sp/>800;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((score[NORD-1]<sp/>&lt;<sp/>701)<sp/>&amp;&amp;<sp/>(score[EST-1]<sp/>&lt;<sp/>701));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>infoEcritureFicher[2]<sp/>=<sp/>score[SUD-1];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score[NORD-1]<sp/>&gt;<sp/>701)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>NORD<sp/>-<sp/>1)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>SUD<sp/>-<sp/>1)<sp/>+=1;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infoEcritureFicher[1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(message,<sp/></highlight><highlight class="stringliteral">&quot;Felicitations<sp/>!!<sp/>Vous<sp/>remportez<sp/>la<sp/>partie<sp/>avec<sp/>%s,<sp/>vous<sp/>avez<sp/>atteint<sp/>un<sp/>total<sp/>de<sp/>%d<sp/>points<sp/>et<sp/>vos<sp/>adversaires<sp/>ont<sp/>%d<sp/>points&quot;</highlight><highlight class="normal">,<sp/>pseudo[NORD-1],<sp/>score[NORD-1],<sp/>score[EST-1]);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheMenuSelection(</highlight><highlight class="stringliteral">&quot;Gagne&quot;</highlight><highlight class="normal">,<sp/>message,<sp/>1);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DEBUG_MODE<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>et<sp/>%s<sp/>remportent<sp/>la<sp/>partie<sp/>avec<sp/>%d<sp/>points<sp/>et<sp/>%s<sp/>et<sp/>%s<sp/>perdent<sp/>avec<sp/>%d<sp/>points\n&quot;</highlight><highlight class="normal">,pseudo[SUD<sp/>-1],<sp/>pseudo[NORD-1],<sp/>score[NORD-1],pseudo[EST<sp/>-<sp/>1],<sp/>pseudo[OUEST<sp/>-1],<sp/>score[EST-1]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>EST<sp/>-<sp/>1)<sp/>+=1;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>OUEST<sp/>-<sp/>1)<sp/>+=1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(message,<sp/></highlight><highlight class="stringliteral">&quot;Dommage<sp/>!!<sp/>Vous<sp/>perdez<sp/>la<sp/>partie<sp/>avec<sp/>%s,<sp/>vous<sp/>avez<sp/>atteint<sp/>un<sp/>total<sp/>de<sp/>%d<sp/>points<sp/>et<sp/>vos<sp/>adversaires<sp/>ont<sp/>%d<sp/>points&quot;</highlight><highlight class="normal">,<sp/>pseudo[NORD-1],<sp/>score[NORD-1],<sp/>score[EST-1]);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheMenuSelection(</highlight><highlight class="stringliteral">&quot;Defaite&quot;</highlight><highlight class="normal">,<sp/>message,<sp/>1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DEBUG_MODE<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>et<sp/>%s<sp/>remportent<sp/>la<sp/>partie<sp/>avec<sp/>%d<sp/>points<sp/>et<sp/>%s<sp/>et<sp/>%s<sp/>perdent<sp/>avec<sp/>%d<sp/>points\n&quot;</highlight><highlight class="normal">,pseudo[EST<sp/>-<sp/>1],<sp/>pseudo[OUEST<sp/>-1],<sp/>score[EST-1],<sp/><sp/>pseudo[SUD<sp/>-1],<sp/>pseudo[NORD-1],<sp/>score[NORD-1]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR<sp/>||<sp/>DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nPartie<sp/>finie<sp/>\nPressez<sp/>une<sp/>touche<sp/>pour<sp/>continuer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>infoEcritureFicher[0]<sp/>=<sp/>nbManche;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nbManche;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>manche(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score[],<sp/>Joueur<sp/>dealer,<sp/>Joueur<sp/>utilisateur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pStatistique)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mancheJouee<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(utilisateur<sp/>!=<sp/>SANS_JOUEUR){</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;cls&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR<sp/>||<sp/>DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n*****DEBUT<sp/>DE<sp/>LA<sp/>MANCHE*****\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>mainJoueur[4][8];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>contrat;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointManche[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointAnonce[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointBelote[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>belote[4]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pMainJoueur<sp/>=<sp/>&amp;mainJoueur[0][0];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>distribueCarte(pMainJoueur);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR<sp/>||<sp/>DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nDistribution<sp/>des<sp/>cartes\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(utilisateur<sp/>!=<sp/>SANS_JOUEUR){</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trieCarte(mainJoueur[utilisateur-1],<sp/>8,<sp/>TOUT_ATOUT);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>contrat<sp/><sp/>=<sp/>annonceContrat(pseudo,<sp/>dealer,<sp/>pMainJoueur,<sp/>utilisateur);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>rechercheAnnonce(pMainJoueur,<sp/>pointAnonce,<sp/>utilisateur,<sp/>pseudo);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR){</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Appuyer<sp/>sur<sp/>une<sp/>touche<sp/>pour<sp/>continuer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trieCarte(mainJoueur[utilisateur-1],<sp/>8,<sp/>contrat.atout);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrat.nbPoint<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mancheJouee<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>4<sp/>+<sp/>contrat.preneur<sp/>-<sp/>1)<sp/>+=1;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Joueur<sp/>vainqueurPli<sp/>=<sp/>joueurSuivant(dealer);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>cartePli[4],<sp/>carteDernierPli[4];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCarte(&amp;carteDernierPli[i],<sp/>SANS_VALEUR,<sp/>SANS_COULEUR);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>4;<sp/>j++)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCarte(&amp;cartePli[j],<sp/>SANS_VALEUR,<sp/>SANS_COULEUR);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vainqueurPli<sp/>=<sp/>pli(contrat,<sp/>vainqueurPli,<sp/>pseudo,<sp/>pMainJoueur,<sp/>pointManche,<sp/>pointAnonce,<sp/>belote,<sp/>cartePli,<sp/>carteDernierPli,score,<sp/>utilisateur,<sp/>i);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>3*4<sp/>+<sp/>vainqueurPli<sp/>-<sp/>1)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCarte(&amp;carteDernierPli[i],<sp/>cartePli[i].valeur,<sp/>cartePli[i].couleur);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(belote[i]<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointBelote[i]<sp/>+=<sp/>20;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*printf(&quot;%d,<sp/>%d,<sp/>%d,<sp/>%d,<sp/>total<sp/>:<sp/>%d\n&quot;,<sp/>pointManche[0],<sp/>pointManche[1],<sp/>pointManche[2],<sp/>pointManche[3],<sp/>pointManche[0]+<sp/>pointManche[1]+<sp/>pointManche[2]+<sp/>pointManche[3]<sp/>);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calculPointManche(contrat,<sp/>pointManche,<sp/>pointAnonce,<sp/>pointBelote,<sp/>score,<sp/>pseudo,<sp/>utilisateur)){</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>4*2<sp/>+<sp/>contrat.preneur<sp/>-<sp/>1)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>4*4<sp/>+<sp/>contrat.preneur<sp/>-<sp/>1)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>4*4<sp/>+<sp/>joueurSuivant(joueurSuivant(contrat.preneur))<sp/>-<sp/>1)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>4*4<sp/>+<sp/>joueurSuivant(contrat.preneur)<sp/>-<sp/>1)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pStatistique<sp/>+<sp/>4*4<sp/>+<sp/>joueurSuivant(joueurSuivant(joueurSuivant(contrat.preneur)))<sp/>-<sp/>1)<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR){</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Appuyer<sp/>sur<sp/>une<sp/>touche<sp/>pour<sp/>continuer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getch();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mancheJouee;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>annonceContrat(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/>Joueur<sp/>dealer,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pCarteMain,<sp/>Joueur<sp/>utilisateur)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbPasse<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>Joueur<sp/>parle<sp/>=<sp/>joueurSuivant(dealer);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>contratPropose,<sp/>nouveauContrat;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>setContrat(&amp;contratPropose,<sp/>SANS_JOUEUR,<sp/>ZERO,<sp/>SANS_COULEUR,<sp/>NORMAL);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR<sp/>||<sp/>DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nDebut<sp/>de<sp/>la<sp/>phase<sp/>d&apos;annonce<sp/>des<sp/>contrats<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nbPasse<sp/>&lt;<sp/>3)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nouveauContrat<sp/>=<sp/>proposeContrat(contratPropose,<sp/>parle,<sp/>pseudo,<sp/>pCarteMain,<sp/>utilisateur);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR<sp/>||<sp/>DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nouveauContrat.nbPoint<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>nouveauContrat.coinche<sp/>==<sp/>NORMAL){</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>propose<sp/>le<sp/>contrat<sp/>suivant<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/>pseudo[parle<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheContrat(nouveauContrat,<sp/>pseudo,<sp/>1);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheContrat(nouveauContrat,<sp/>pseudo,<sp/>2);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nouveauContrat.coinche<sp/>==<sp/>COINCHE)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>COINCHE<sp/>!!\n&quot;</highlight><highlight class="normal">,<sp/>pseudo[parle<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nouveauContrat.coinche<sp/>==<sp/>SURCOINCHE)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>SURCOINCHE<sp/>!!!!\n&quot;</highlight><highlight class="normal">,<sp/>pseudo[parle<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>passe\n&quot;</highlight><highlight class="normal">,<sp/>pseudo[parle<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nouveauContrat.nbPoint<sp/>&gt;<sp/>contratPropose.nbPoint<sp/>||<sp/>nouveauContrat.coinche<sp/>&gt;<sp/>contratPropose.coinche)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contratPropose<sp/>=<sp/>nouveauContrat;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbPasse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nbPasse<sp/>++;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parle<sp/>=<sp/>joueurSuivant(parle);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR<sp/>||<sp/>DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contratPropose.nbPoint<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nTous<sp/>les<sp/>joueurs<sp/>ont<sp/>passe,<sp/>on<sp/>redistribue<sp/>les<sp/>cartes\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR<sp/>||<sp/>DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Le<sp/>contrat<sp/>suivant<sp/>a<sp/>ete<sp/>choisi<sp/>pour<sp/>la<sp/>manche<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DEBUG_MODE<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>pseudo[contratPropose.preneur<sp/>-1]);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheContrat(contratPropose,<sp/>pseudo,<sp/>1);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheContrat(contratPropose,<sp/>pseudo,<sp/>2);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>contratPropose;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>proposeContrat(<ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>dernierContrat,<sp/>Joueur<sp/>parle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pCarteMain,<sp/>Joueur<sp/>utilisateur)</highlight></codeline>
<codeline lineno="364"><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>nouveauContrat;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>setContrat(&amp;nouveauContrat,<sp/>SANS_JOUEUR,<sp/>ZERO,<sp/>SANS_COULEUR,<sp/>NORMAL);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parle<sp/>==<sp/>utilisateur)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nouveauContrat<sp/>=<sp/>proposeContratUtilisateur(dernierContrat,<sp/>parle,<sp/>pCarteMain<sp/>+<sp/>(parle<sp/>-1)*8);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nouveauContrat<sp/>=<sp/>proposeContratIa(parle,<sp/>pCarteMain<sp/>+<sp/>(parle<sp/>-<sp/>1)*8,<sp/>dernierContrat);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nouveauContrat;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal">Joueur<sp/>pli(<ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>contrat,<sp/>Joueur<sp/>premierAJouer,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pCarteMain,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointManche[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointAnonce[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>belote[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>cartePli[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>carteAncienPli[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score[],<sp/>Joueur<sp/>utilisateur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPli)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>Joueur<sp/>vainceur<sp/>=<sp/>SANS_JOUEUR,<sp/>parle<sp/>=<sp/>premierAJouer;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[TAILLE_MAXI_MESSAGE];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCarte=0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parle<sp/>==<sp/>utilisateur)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCarte<sp/>=<sp/>afficheInterfacePli(carteAncienPli,<sp/>cartePli,<sp/>pseudo,<sp/>pCarteMain<sp/>+<sp/>8*(parle<sp/>-1),<sp/>contrat,<sp/></highlight><highlight class="stringliteral">&quot;Entrez<sp/>le<sp/>numero<sp/>de<sp/>la<sp/>carte<sp/>que<sp/>vous<sp/>voulez<sp/>jouer&quot;</highlight><highlight class="normal">,<sp/>utilisateur,<sp/>premierAJouer,<sp/>score,<sp/>pointManche,<sp/>0);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCarte<sp/><sp/>=<sp/>choixCarteIA(parle,<sp/>pCarteMain+<sp/>8*(parle<sp/>-1),<sp/>cartePli,<sp/>premierAJouer,<sp/>contrat.atout,8-numPli);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poseCarte(parle,<sp/>numCarte,<sp/>pCarteMain+<sp/>8*(parle<sp/>-1),<sp/>cartePli,<sp/>8-numPli);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genereMessage(message,<sp/>parle,<sp/>pseudo,<sp/>cartePli[parle-1],<sp/>0,<sp/>POSE_CARTE);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cartePli[parle-1].couleur<sp/>==<sp/>contrat.atout<sp/>||<sp/>contrat.atout<sp/>==<sp/>TOUT_ATOUT)<sp/>&amp;&amp;<sp/>(cartePli[parle-1].valeur<sp/>==<sp/>DAME<sp/>||cartePli[parle-1].valeur<sp/>==<sp/>ROI)){</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>belote[parle-1]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(belote[parle-1]==<sp/>1){</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(message,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>et<sp/>anonce<sp/>une<sp/>Belote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(belote[parle-1]<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(message,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>et<sp/>anonce<sp/>une<sp/>Rebelote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheInterfacePli(carteAncienPli,<sp/>cartePli,<sp/>pseudo,<sp/>pCarteMain<sp/>+<sp/>8*(utilisateur<sp/>-1),<sp/>contrat,<sp/>message,<sp/>utilisateur,<sp/>premierAJouer,<sp/>score,<sp/>pointManche,<sp/>1);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DEBUG_MODE<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parle<sp/>=<sp/>joueurSuivant(parle);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>vainceur<sp/>=<sp/>vainqueurPli(cartePli,<sp/>contrat.atout,<sp/>premierAJouer);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointDuPli<sp/>=<sp/>pointPli(cartePli,<sp/>contrat.atout,<sp/>4);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>pointManche[vainceur<sp/>-1]<sp/>+=<sp/>pointDuPli;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numPli<sp/>==<sp/>7)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointManche[vainceur<sp/>-1]<sp/>+=<sp/>10;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>genereMessage(message,<sp/>vainceur,<sp/>pseudo,<sp/>cartePli[parle-1],<sp/>pointDuPli,<sp/>RESULTAT_PLI);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheInterfacePli(carteAncienPli,<sp/>cartePli,<sp/>pseudo,<sp/>pCarteMain<sp/>+<sp/>8*(utilisateur<sp/>-1),<sp/>contrat,<sp/>message,utilisateur,<sp/>premierAJouer,<sp/>score,<sp/>pointManche,<sp/>1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DEBUG_MODE<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n\n&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vainceur;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>poseCarte<sp/>(Joueur<sp/>joueur,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCarte,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pMainJoueurs,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>pli[],</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>carteRestante)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retour=NULL;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>carteAJouer;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>carteAJouer<sp/>=<sp/><sp/>*((numCarte-1)+<sp/>pMainJoueurs);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>supprimeCarte(pMainJoueurs,carteRestante,numCarte-1);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>setCarte(pli+joueur-1,carteAJouer.valeur,carteAJouer.couleur);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>retour=1;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retour;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>calculPointManche(<ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>contrat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointManche[],</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointAnonce[],</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointBelote[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score[],</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/>Joueur<sp/>utilisateur)</highlight></codeline>
<codeline lineno="469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>contratRempli<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointPreneur<sp/>=<sp/>pointManche[contrat.preneur-1]<sp/>+<sp/>pointManche[joueurSuivant(joueurSuivant(contrat.preneur))-1];</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointAnoncePreneur<sp/>=<sp/>pointAnonce[contrat.preneur-1]<sp/>+<sp/>pointAnonce[joueurSuivant(joueurSuivant(contrat.preneur))-1];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointBelotePreneur<sp/>=<sp/>pointBelote[contrat.preneur-1]<sp/>+<sp/>pointBelote[joueurSuivant(joueurSuivant(contrat.preneur))-1];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointDefendant<sp/>=<sp/>pointManche[joueurSuivant(contrat.preneur)-1]<sp/>+<sp/>pointManche[joueurSuivant(joueurSuivant(joueurSuivant(contrat.preneur)))-1];</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointAnonceDefendant<sp/>=<sp/>pointAnonce[joueurSuivant(contrat.preneur)-1]<sp/>+<sp/>pointAnonce[joueurSuivant(joueurSuivant(joueurSuivant(contrat.preneur)))-1];</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointBeloteDefendant<sp/>=<sp/>pointBelote[joueurSuivant(contrat.preneur)-1]<sp/>+<sp/>pointBelote[joueurSuivant(joueurSuivant(joueurSuivant(contrat.preneur)))-1];</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalPointPreneur<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalPointDefandant<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrat.nbPoint<sp/>==<sp/>170)<sp/></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointPreneur<sp/>==<sp/>162)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contratRempli<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrat.nbPoint<sp/>==<sp/>180)<sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointManche[contrat.preneur-1]<sp/>==<sp/>162)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contratRempli<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pointPreneur<sp/>&gt;=<sp/>82<sp/>&amp;&amp;<sp/>pointPreneur<sp/>+<sp/>pointAnoncePreneur<sp/>&gt;=<sp/>contrat.nbPoint)<sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contratRempli<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contratRempli)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointPreneur<sp/>=<sp/>pointPreneur<sp/>+<sp/>pointAnoncePreneur<sp/>+<sp/>pointBelotePreneur<sp/>+<sp/>contrat.nbPoint;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointDefandant<sp/>=<sp/>pointDefendant<sp/>+<sp/>pointAnoncePreneur<sp/>+<sp/>pointBeloteDefendant;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrat.coinche<sp/>==<sp/>COINCHE)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointPreneur<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointPreneur<sp/>+=<sp/>pointAnonceDefendant;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointDefandant<sp/>=<sp/>pointBeloteDefendant;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrat.coinche<sp/>==<sp/>SURCOINCHE)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointPreneur<sp/>*=<sp/>4;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointPreneur<sp/>+=<sp/>pointAnonceDefendant;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointDefandant<sp/>=<sp/>pointBeloteDefendant;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointPreneur<sp/>=<sp/>pointBelotePreneur;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointDefandant<sp/>=<sp/>162<sp/>+<sp/>contrat.nbPoint<sp/>+<sp/>pointAnonceDefendant<sp/>+<sp/>pointAnoncePreneur<sp/>+<sp/>pointBeloteDefendant;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrat.coinche<sp/>==<sp/>COINCHE)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointDefandant<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contrat.coinche<sp/>==<sp/>SURCOINCHE)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalPointDefandant<sp/>*=<sp/>4;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>score[contrat.preneur<sp/>-<sp/>1]<sp/>+=<sp/>totalPointPreneur;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>score[joueurSuivant(joueurSuivant(contrat.preneur))<sp/>-<sp/>1]<sp/>+=<sp/>totalPointPreneur;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>score[joueurSuivant(contrat.preneur)-1]<sp/>+=<sp/>totalPointDefandant;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>score[joueurSuivant(joueurSuivant(joueurSuivant(contrat.preneur)))-1]<sp/>+=<sp/>totalPointDefandant;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[TAILLE_MAXI_MESSAGE];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(contratRempli)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(message,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>remporte<sp/>son<sp/>contrat<sp/>et<sp/>gagne<sp/>%d<sp/>points<sp/>;Ses<sp/>adversaires<sp/>gagnent<sp/>%d<sp/>points.<sp/>;L&apos;equipe<sp/>Longitude<sp/>a<sp/>%d<sp/>points<sp/>et<sp/>l&apos;equipe<sp/>Latitude<sp/>en<sp/>a<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>pseudo[contrat.preneur-1],<sp/>totalPointPreneur,<sp/>totalPointDefandant,<sp/>score[NORD<sp/>-1],<sp/>score[EST-1]);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(message,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>echoue<sp/>son<sp/>contrat<sp/>et<sp/>gagne<sp/>%d<sp/>points<sp/>;Ses<sp/>adversaires<sp/>gagnent<sp/>%d<sp/>points.<sp/>;L&apos;equipe<sp/>Longitude<sp/>a<sp/>%d<sp/>points<sp/>et<sp/>l&apos;equipe<sp/>Latitude<sp/>en<sp/>a<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>pseudo[contrat.preneur-1],<sp/>totalPointPreneur,<sp/>totalPointDefandant,<sp/>score[NORD<sp/>-1],<sp/>score[EST-1]);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utilisateur<sp/>!=<sp/>SANS_JOUEUR)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>afficheMenuSelection(</highlight><highlight class="stringliteral">&quot;Resultat<sp/>manche&quot;</highlight><highlight class="normal">,<sp/>message,<sp/>1);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DEBUG_MODE<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>message);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>contratRempli;</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c"/>
  </compounddef>
</doxygen>
