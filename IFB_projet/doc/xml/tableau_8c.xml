<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="tableau_8c" kind="file" language="C++">
    <compoundname>tableau.c</compoundname>
    <includes refid="main_8h" local="yes">main.h</includes>
    <incdepgraph>
      <node id="11">
        <label>affichage.h</label>
        <link refid="affichage_8h_source"/>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>sous-menus.h</label>
        <link refid="sous-menus_8h_source"/>
      </node>
      <node id="5">
        <label>conio.h</label>
      </node>
      <node id="15">
        <label>autre.h</label>
        <link refid="autre_8h_source"/>
      </node>
      <node id="13">
        <label>general.h</label>
        <link refid="general_8h_source"/>
      </node>
      <node id="18">
        <label>gestionFichier.h</label>
        <link refid="gestion_fichier_8h_source"/>
      </node>
      <node id="16">
        <label>ia.h</label>
        <link refid="ia_8h_source"/>
      </node>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="1">
        <label>tableau.c</label>
        <link refid="tableau_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>tableau.h</label>
        <link refid="tableau_8h_source"/>
      </node>
      <node id="7">
        <label>time.h</label>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="14">
        <label>formatageChaine.h</label>
        <link refid="formatage_chaine_8h_source"/>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="12">
        <label>gestionCarte.h</label>
        <link refid="gestion_carte_8h_source"/>
      </node>
      <node id="10">
        <label>acquisition.h</label>
        <link refid="acquisition_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="tableau_8c_1a87d346e4b4a7b465ff0a4fdce8557a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int sommeTableau</definition>
        <argsstring>(int tableau[], int tailleTableau)</argsstring>
        <name>sommeTableau</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>fait la somme des valeur d&apos;un tableau contenant des entiers </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: le nom du tableau </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>la somme des valeur du table entier </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="11" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="11" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1ae5e1147af5d176f3ee995cbe483d0b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float moyenneTableau</definition>
        <argsstring>(int tableau[], int tailleTableau)</argsstring>
        <name>moyenneTableau</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>fait la moyenne des valeur d&apos;un tableau contenant des entiers </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: le nom du tableau </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>la moyenne des valeur du tableau, réel </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="20" column="7" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1a0d3a155a1f45f3e2ddc38a826bd2b0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copie</definition>
        <argsstring>(int tableauOriginal[], int tableauCopie[], int tailleTableau)</argsstring>
        <name>copie</name>
        <param>
          <type>int</type>
          <declname>tableauOriginal</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tableauCopie</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>copie un tableau dans un autre </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableauOriginal[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableaau que l&apos;on veut copier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tableauCopie[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableau dans lequel on copie tableauOriaginal </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="25" column="7" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1aabc5dc617777ef63ecbd9748a76d0946" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mini</definition>
        <argsstring>(int tableau[], int tailleTableau)</argsstring>
        <name>mini</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>trouve la valeur minimum d&apos;un tableau </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau</parametername>
</parameternamelist>
<parameterdescription>
<para>[] : tableau dont on veut travailler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int valeur la plus petite du tableau </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="33" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="33" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1abb9a32acf6c0aa09923d2ebaeae71c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int maxi</definition>
        <argsstring>(int tableau[], int tailleTableau)</argsstring>
        <name>maxi</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>trouve la valeur maximum d&apos;un tableau </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau</parametername>
</parameternamelist>
<parameterdescription>
<para>[] : tableau dont on veut travailler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int valeur la plus grande du tableau </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="45" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="45" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1a9ee813b3f4a8dd879d8592365d6cfae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void zeroSiSuperieur</definition>
        <argsstring>(int tableau[], int tailleTableau, int maximum)</argsstring>
        <name>zeroSiSuperieur</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
<para>met a 0 toute les valeur d&apos;un tableau qui sont superieur a un maximum </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableau sur lequel on veut travailler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>: valeur maximum au dessus de quoi la valeur est remise a 0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="57" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1a848e8defd81980f6ddc459d58dacab4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ordonnerTableau</definition>
        <argsstring>(int tableau[], int tailleTableau)</argsstring>
        <name>ordonnerTableau</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>classe les valeur d&apos;un tableau dans l&apos;orde croissant </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: le tableau à classer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="66" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="66" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1a3698664b2180ad0cf881e41c18bce9ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void afficheTableau</definition>
        <argsstring>(int tableau[], int tailleTableau)</argsstring>
        <name>afficheTableau</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>affiche un tableau </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: le tableau a afficher </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="83" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="83" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1a6b6fcb13de3d27945d1edee8f894fcfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void acquiertTableau</definition>
        <argsstring>(int tableau[], int tailleTableau)</argsstring>
        <name>acquiertTableau</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <briefdescription>
<para>demande a l&apos;utilisateurde saisir les valeurs d&apos;un tableau </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: nom du tableau a saisir </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: la taille du tableau, entier positif </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="93" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1ae84745841135edc4425db0efded0211b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void constanteTableau</definition>
        <argsstring>(int tableau[], int tailleTableau, int valeur)</argsstring>
        <name>constanteTableau</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>valeur</declname>
        </param>
        <briefdescription>
<para>donne a toute les valeur d&apos;un tableau une constante </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableau a modifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille du tableau entier positif </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valeur</parametername>
</parameternamelist>
<parameterdescription>
<para>: valeur a donner a toutes les valeur du tableau </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="101" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1aba5c3fe06dde8dbf3b8e0348455053be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int rechercheDichotomie</definition>
        <argsstring>(int tableau[], int tailleTableau, int nCherche)</argsstring>
        <name>rechercheDichotomie</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nCherche</declname>
        </param>
        <briefdescription>
<para>chercherche par dicotomie si une valeur est au moin une fois dans le tableau </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableau dans lequel on fait la recherche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille du tableau entier positif </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nCherche</parametername>
</parameternamelist>
<parameterdescription>
<para>nombre que l&apos;on cherche dans le tableau </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int : 1 si on a trouvé, 0 sinon </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="108" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="108" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="tableau_8c_1ab5540bc66fc160b2a8dd57234165ede5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void aleatoireTableau</definition>
        <argsstring>(int tableau[], int tailleTableau, int mini, int maxi)</argsstring>
        <name>aleatoireTableau</name>
        <param>
          <type>int</type>
          <declname>tableau</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleTableau</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mini</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxi</declname>
        </param>
        <briefdescription>
<para>donne des nombres aléatoire au valeur d&apos;un tableau </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tableau[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableau a modifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleTableau</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille du tableau entier positif </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mini</parametername>
</parameternamelist>
<parameterdescription>
<para>: valeur minimum des nombres aléatoires </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxi</parametername>
</parameternamelist>
<parameterdescription>
<para>: valeur maximum des nombres aléatoires </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" line="127" column="7" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c" bodystart="127" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sommeTableau(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>somme<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>somme<sp/>=<sp/>somme<sp/>+<sp/>tableau[i];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>somme;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>moyenneTableau(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)sommeTableau(tableau,<sp/>tailleTableau)/tailleTableau);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copie(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableauOriginal[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableauCopie[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableauCopie[i]<sp/>=<sp/>tableauOriginal[i];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mini<sp/>=<sp/>tableau[0];</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableau[i]<sp/>&lt;<sp/>mini){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mini<sp/>=<sp/>tableau[i];</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mini;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxi(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxi;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>maxi<sp/>=<sp/>tableau[0];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableau[i]<sp/>&gt;<sp/>maxi){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxi<sp/>=<sp/>tableau[i];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxi;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>zeroSiSuperieur(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maximum)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableau[i]<sp/>&gt;<sp/>maximum){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableau[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ordonnerTableau(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tampon;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;tailleTableau<sp/>-<sp/>i;<sp/>j++){</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableau[j]<sp/>&gt;<sp/>tableau<sp/>[j+1]){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tampon<sp/>=<sp/>tableau[j];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableau[j]<sp/>=<sp/>tableau[j+1];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableau[j+1]<sp/>=<sp/>tampon;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>afficheTableau(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/>cle\t|<sp/>valeur\n__________________\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|<sp/><sp/>%d\t|<sp/><sp/>%d\t|\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>tableau[i]);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;__________________\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>acquiertTableau(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Entrer<sp/>la<sp/>valeur<sp/>de<sp/>la<sp/>%d<sp/>case<sp/>:<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;tableau<sp/>[i]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>constanteTableau(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valeur)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableau[i]<sp/>=<sp/>valeur;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rechercheDichotomie(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCherche)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>trouve<sp/>=<sp/>0,<sp/>debut<sp/>=<sp/>0,<sp/>fin<sp/>=<sp/>tailleTableau<sp/>-<sp/>1,<sp/>millieu;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(debut<sp/>&lt;=<sp/>fin<sp/>&amp;&amp;<sp/>trouve<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>millieu<sp/>=<sp/>floor((fin<sp/>-<sp/>debut)/2);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tableau[millieu]<sp/>==<sp/>nCherche){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trouve<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tableau[millieu]<sp/>&lt;<sp/>nCherche){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debut<sp/>=<sp/>millieu+1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fin<sp/>=<sp/>millieu-1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trouve;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>aleatoireTableau(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableau[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleTableau,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mini,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxi)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tailleTableau;<sp/>i++){</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tableau[i]<sp/>=<sp/>rand()%(maxi-mini+1)<sp/>+<sp/>mini;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/>}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/tableau.c"/>
  </compounddef>
</doxygen>
