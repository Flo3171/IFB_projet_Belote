<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="ia_8h" kind="file" language="C++">
    <compoundname>ia.h</compoundname>
    <includedby refid="main_8h" local="yes">main.h</includedby>
    <invincdepgraph>
      <node id="1">
        <label>ia.h</label>
        <link refid="ia_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ia_8h_1ac4ece833f773f242d312062bf3869086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
        <definition>Contrat proposeContratIa</definition>
        <argsstring>(Joueur parle, Carte *pCarteMain, Contrat dernierContrat)</argsstring>
        <name>proposeContratIa</name>
        <param>
          <type>Joueur</type>
          <declname>parle</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pCarteMain</declname>
        </param>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>dernierContrat</declname>
        </param>
        <briefdescription>
<para>proposition par l&apos;ia d&apos;un contrat </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>parle : joueur qui parle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pCarteMain pointeur sur le tableau qui contient les cartes du joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>dernierContrat : dernier contrat qui a été proposé </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_contrat" kindref="compound">Contrat</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Permet de dÃ©terminer de maniÃ¨re euristique la meilleur valeur de seuilMinPrise et seuilMaxPrise</para>
<para>&lt; ON coinche !</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/ia.h" line="13" column="9" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/ia.c" bodystart="3" bodyend="50" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/ia.h" declline="13" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="ia_8h_1a4cc2fff930cb0207bf54b59dc2b6ee97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int choixCarteIA</definition>
        <argsstring>(Joueur joueur, Carte *pMainJoueur, Carte pli[], Joueur dernierVainqueur, Couleur atout, int carteRestante)</argsstring>
        <name>choixCarteIA</name>
        <param>
          <type>Joueur</type>
          <declname>joueur</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pMainJoueur</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>pli</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>dernierVainqueur</declname>
        </param>
        <param>
          <type>Couleur</type>
          <declname>atout</declname>
        </param>
        <param>
          <type>int</type>
          <declname>carteRestante</declname>
        </param>
        <briefdescription>
<para>proposition de la pose d&apos;une carte par l&apos;IA </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>joueur : determine qu&apos;elle IA doit jouer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pMainJoueur : pointeur vers le tableau qui enregistre la main de l&apos;IA </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>pli[] : tableau qui enregistre les cartes jouées pendant le pli </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>dernierVainqueur : defini quel joueur à posé la première carte </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Couleur</parametername>
</parameternamelist>
<parameterdescription>
<para>atout : defini quelle couleur est en atout </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>carteRestante : nombre de cartes resantes en main </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>debug for(int i=0;i&lt;nbCarteValide;i++){ printf(&quot;|%d| \n&quot;,numCarteValide[i]); } afficheMain(pCarteValidee);</para>
<para>debug for(int i=0;i&lt;offset;i++){ printf(&quot;|%d|| \n&quot;,numCarteGagnante[i]); } afficheMain(pCarteGagante);</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/ia.h" line="27" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/ia.c" bodystart="52" bodyend="151" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/ia.h" declline="27" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_IA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_IA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>proposeContratIa(Joueur<sp/>parle,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pCarteMain,<sp/><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>dernierContrat);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choixCarteIA(Joueur<sp/>joueur,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pMainJoueur,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>pli[],<sp/>Joueur<sp/>dernierVainqueur,<sp/>Couleur<sp/>atout,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>carteRestante);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_IA_H_</highlight></codeline>
    </programlisting>
    <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/ia.h"/>
  </compounddef>
</doxygen>
