<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="formatage_chaine_8h" kind="file" language="C++">
    <compoundname>formatageChaine.h</compoundname>
    <includedby refid="main_8h" local="yes">main.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h_source"/>
      </node>
      <node id="1">
        <label>formatageChaine.h</label>
        <link refid="formatage_chaine_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="formatage_chaine_8h_1ae9b1a537c2b31ecd1400d3644bb180af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int centreChaine</definition>
        <argsstring>(char chaineInitial[], char chaineFinal[], int longeurChaine)</argsstring>
        <name>centreChaine</name>
        <param>
          <type>char</type>
          <declname>chaineInitial</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>chaineFinal</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>longeurChaine</declname>
        </param>
        <briefdescription>
<para>transphorme une chaine de caractère de longeur inconue en une chaine de caratère fixé de tel sorte que le texte soit centré </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>chaineInitial : chaine a modifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>chaineFinal : pointeur vers la variable qui stocke la chainne final </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>longeurChaine : longeur de la chaine final </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int : 0 si tout va bien, 1 si la chaine est Initiale test plus longue que la longeur désirée </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="12" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="3" bodyend="26" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1a3a016c722803925f63f13d6218d6d1de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int centreModifieChaine</definition>
        <argsstring>(char chaine[], int longeurChaine)</argsstring>
        <name>centreModifieChaine</name>
        <param>
          <type>char</type>
          <declname>chaine</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>longeurChaine</declname>
        </param>
        <briefdescription>
<para>transforme une chaine de cararactère en sa vertion centrée </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>chaine : chaine a modifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>longeurChaine </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int : 0 si tout c&apos;est bien passé </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="22" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="28" bodyend="36" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1ad598bad9520e1d05637504cf2890a947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int decoupeChaine</definition>
        <argsstring>(char chaineInitiale[], char *chaineFinale, int tailleLigne, int nbLigne)</argsstring>
        <name>decoupeChaine</name>
        <param>
          <type>char</type>
          <declname>chaineInitiale</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>chaineFinale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tailleLigne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbLigne</declname>
        </param>
        <briefdescription>
<para>fontion qui permet de découper une chaine de caracère en plusieur chaine de taille fixée en coupant sur un espace </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chaineInitiale[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: chaine a decouper </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chaineFinale[][]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableau contenant les chaine un fois découpé </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleLigne</parametername>
</parameternamelist>
<parameterdescription>
<para>: nobre de caracète maximun par ligne </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbLinge</parametername>
</parameternamelist>
<parameterdescription>
<para>: nombre maximun de ligne </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 si tout va bien 1 si la chaine est trop longue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="34" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="38" bodyend="84" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="34" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1acbb12af7b4e8b15a8d366abae8fe5ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rempliEspace</definition>
        <argsstring>(char *chaine, int nbEspace)</argsstring>
        <name>rempliEspace</name>
        <param>
          <type>char *</type>
          <declname>chaine</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbEspace</declname>
        </param>
        <briefdescription>
<para>rempli une chaine de caractère de nbEspace caractère espace &apos; &apos; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chaine[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: chaine a remplir; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbEspace[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: nombre d&apos;espaca a placer dans la chaine </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="43" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="86" bodyend="92" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="43" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1ae97b1deba041f2e607c1acad99704bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void formateCarte</definition>
        <argsstring>(Carte carte[], char *chaineFinale, int nbCarte, int tailleChaine, int version)</argsstring>
        <name>formateCarte</name>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>carte</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>chaineFinale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbCarte</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tailleChaine</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>formate les chaine de caracère qui affiche la valeur et la couleur des cartes </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chaineFinale[][][]</parametername>
</parameternamelist>
<parameterdescription>
<para>tableau a trois dimention qui stocke les chaine de caracère de la valeur et la couleurs des cartes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>carte[]</parametername>
</parameternamelist>
<parameterdescription>
<para>: tableau de typpe <ref refid="struct_carte" kindref="compound">Carte</ref> contenant les carte a afficher </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbCarte</parametername>
</parameternamelist>
<parameterdescription>
<para>: nombre de carte dans le tableau carte[] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleChaine</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille des chaineFinale </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>: 0 si c&apos;est la verion courte et 1 pour la verision longue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="55" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="94" bodyend="99" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1ad06c0eb331a3563fa5b53797ee448034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void stockeInfoCarte</definition>
        <argsstring>(Carte carte, char *valeur, char *couleur, int version, int tailleChaine)</argsstring>
        <name>stockeInfoCarte</name>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>carte</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>valeur</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>couleur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tailleChaine</declname>
        </param>
        <briefdescription>
<para>met dans une chaine de caractère la valeur et la couleur d&apos;une carte </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>carte</parametername>
</parameternamelist>
<parameterdescription>
<para>: variable de type carte qui contient la carte a afficher </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valeur</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointeur vers la chaine qui stocke la valeur (ou la valeur et la couleur si mode court) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>couleur</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointeur vers la chaine qui stocke la couleur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vesion</parametername>
</parameternamelist>
<parameterdescription>
<para>: 0 si c&apos;est la version courte et 1 pour la version longue </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tailleChaine</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille de la chaine de caratère dans laquel on écrit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="68" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="101" bodyend="211" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="68" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1ae05838b849d6b785d714efebfcd71cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void formatePseudo</definition>
        <argsstring>(Joueur joueur, char *pseudo[], int tailleChaine, char chaineFinal[], int version)</argsstring>
        <name>formatePseudo</name>
        <param>
          <type>Joueur</type>
          <declname>joueur</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>tailleChaine</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chaineFinal</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>stocke dans une chaine de caractère le pseudo d&apos;un des joueur </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>joueur : joueur dont on veut afficher le pseudo </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[] : tableau contennant les pseudo des joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>tailleChaine : taille de la chaine final </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>chaineFinal[] : chaine final ou est stocké le pseudo </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>varsion : 1 pour la version ou la chaine finale est centrée 0 pour l&apos;aligné a gauche </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="80" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="213" bodyend="242" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1a76b00dd8006b0682ba30099e193d4dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void formateContrat</definition>
        <argsstring>(Contrat contrat, char *chaineFinal, int tailleLigne, char *pseudo[])</argsstring>
        <name>formateContrat</name>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>contrat</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>chaineFinal</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tailleLigne</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>stocke dans des chaine de caractère les info du contrat </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>contrat : contrat a afficher </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*chainefinal : chaine final ou on enregistre les info du contrat </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>tailleLigne : taille d&apos;une ligne </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[] : tableau qui contient les pseudo des joueur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="91" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="244" bodyend="290" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="91" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1a416dc0656ec712c3624275a4aefb85c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int aligneModifieChaine</definition>
        <argsstring>(char chaine[], int longeurChaine)</argsstring>
        <name>aligneModifieChaine</name>
        <param>
          <type>char</type>
          <declname>chaine</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>longeurChaine</declname>
        </param>
        <briefdescription>
<para>transforme une chaine de cararactère en sa vertion aligné a gauche </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>chaine : chaine a modifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>longeurChaine </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int : 0 si tout c&apos;est bien passé </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="100" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="292" bodyend="305" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="100" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="formatage_chaine_8h_1a0a9bbb51e5f916ca5bef2365312e23be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void genereMessage</definition>
        <argsstring>(char message[], Joueur parle, char *pseudo[], Carte carteJoue, int score, TypeMessage typeMessage)</argsstring>
        <name>genereMessage</name>
        <param>
          <type>char</type>
          <declname>message</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>parle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>carteJoue</declname>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
        </param>
        <param>
          <type>TypeMessage</type>
          <declname>typeMessage</declname>
        </param>
        <briefdescription>
<para>génere un message et l&apos;enregistre dans une chaine de caractère </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>message[] : tableau de char ou on enregistre le message </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>parle : joueur qui pose une carte </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[] : tableau qui contient les pseudo des joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>carteJoue : carte qui vine d&apos;être jouée </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>score : score a afficher </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TypeMessage</parametername>
</parameternamelist>
<parameterdescription>
<para>typeMessage : permet de savoir quelle message on veux afficher </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" line="114" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.c" bodystart="307" bodyend="335" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h" declline="114" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_FORMATAGE_CHAINE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_FORMATAGE_CHAINE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centreChaine(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chaineInitial[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chaineFinal[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>longeurChaine);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>centreModifieChaine(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chaine[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>longeurChaine);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decoupeChaine(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chaineInitiale[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chaineFinale,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleLigne,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbLigne);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rempliEspace(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chaine,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbEspace);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>formateCarte(<ref refid="struct_carte" kindref="compound">Carte</ref><sp/>carte[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chaineFinale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbCarte,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleChaine,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stockeInfoCarte(<ref refid="struct_carte" kindref="compound">Carte</ref><sp/>carte,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*valeur,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*couleur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleChaine);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>formatePseudo(Joueur<sp/>joueur,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleChaine,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chaineFinal[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>formateContrat(<ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>contrat,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*chaineFinal,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tailleLigne,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aligneModifieChaine(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chaine[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>longeurChaine);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>genereMessage(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>message[],<sp/>Joueur<sp/>parle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>carteJoue,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score,<sp/>TypeMessage<sp/>typeMessage);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_FORMATAGE_CHAINE_H_</highlight></codeline>
    </programlisting>
    <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/formatageChaine.h"/>
  </compounddef>
</doxygen>
