<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="general_8h" kind="file" language="C++">
    <compoundname>general.h</compoundname>
    <includedby refid="main_8h" local="yes">main.h</includedby>
    <invincdepgraph>
      <node id="4">
        <label>affichage.c</label>
        <link refid="affichage_8c"/>
      </node>
      <node id="5">
        <label>autre.c</label>
        <link refid="autre_8c"/>
      </node>
      <node id="7">
        <label>general.c</label>
        <link refid="general_8c"/>
      </node>
      <node id="1">
        <label>general.h</label>
        <link refid="general_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>gestionFichier.c</label>
        <link refid="gestion_fichier_8c"/>
      </node>
      <node id="10">
        <label>main.c</label>
        <link refid="main_8c"/>
      </node>
      <node id="2">
        <label>main.h</label>
        <link refid="main_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>formatageChaine.c</label>
        <link refid="formatage_chaine_8c"/>
      </node>
      <node id="8">
        <label>gestionCarte.c</label>
        <link refid="gestion_carte_8c"/>
      </node>
      <node id="3">
        <label>acquisition.c</label>
        <link refid="acquisition_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="general_8h_1a7a3238715d030c42dde5f4539c9ca3b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initialisation</definition>
        <argsstring>(int nbLigneFenetre, int nbColloneFenetre)</argsstring>
        <name>initialisation</name>
        <param>
          <type>int</type>
          <declname>nbLigneFenetre</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbColloneFenetre</declname>
        </param>
        <briefdescription>
<para>fonction qui gère l&apos;initialitation et le lancement du programme </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nbLigneFenetre</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille verticale de la fenêtre </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbColloneFenetre</parametername>
</parameternamelist>
<parameterdescription>
<para>: taille horizonotale de la fenêtre </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="24" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="11" bodyend="14" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="24" declcolumn="6"/>
        <references refid="affichage_8c_1a25cb786f432ed01160d9268cdccbe7dc" compoundref="affichage_8c" startline="177" endline="183">modifieTailleFenetre</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1adfbaa271f44d828c6a42ce7e9affee88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void menuPrincipal</definition>
        <argsstring>()</argsstring>
        <name>menuPrincipal</name>
        <briefdescription>
<para>fonction qui gère le debut de la partie </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; contrôle d&apos;acquisition avec réaffichage de l&apos;interfface</para>
<para>&lt;executer la fonction nouvelle partie</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="33" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="16" bodyend="97" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="33" declcolumn="6"/>
        <references refid="acquisition_8c_1afcd1bfa47bc634de2b8467f3191b8782" compoundref="acquisition_8c" startline="52" endline="92">acquisitionPseudoAvecMessage</references>
        <references refid="affichage_8c_1ac892324566767801d485fad58318f635" compoundref="affichage_8c" startline="11" endline="56">afficheMenuPrincipal</references>
        <references refid="affichage_8c_1a978cd3d8ff9f4afa72856d33ad0dea81" compoundref="affichage_8c" startline="269" endline="346">afficheMenuSelection</references>
        <references refid="gestion_fichier_8c_1a7e238d3b3fe49a72cf5deb9757d4466e" compoundref="gestion_fichier_8c" startline="97" endline="164">ecrireLeaderboard</references>
        <references refid="gestion_fichier_8c_1a72c9b768b73e0805b86215b86a67c8bd" compoundref="gestion_fichier_8c" startline="44" endline="95">ecrireStatistique</references>
        <references refid="gestion_fichier_8c_1a90d5f557067c87ecf4dd33f4345f5f2e" compoundref="gestion_fichier_8c" startline="11" endline="42">ecriturePseudo</references>
        <references refid="autre_8c_1ab8d4df8f4e03f038b98f6d96a2eaefd2" compoundref="autre_8c" startline="153" endline="174">joue1000Partie</references>
        <references refid="general_8c_1a1faac25606ba09c4cdbcf54a142dbe0c" compoundref="general_8c" startline="99" endline="186">nouvellePartie</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a1faac25606ba09c4cdbcf54a142dbe0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int nouvellePartie</definition>
        <argsstring>(char *pseudo[], Joueur utilisateur, int *pStatistique, int infoEcritureFicher[])</argsstring>
        <name>nouvellePartie</name>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pStatistique</declname>
        </param>
        <param>
          <type>int</type>
          <declname>infoEcritureFicher</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>lancement d&apos;une nouvelle partie </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[] : tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueuer</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>*pStatistique : pointeur sur un tableau 4*4 qui contient des statistique sur chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>infoEcritureFichier[] : tableau contenant les info qui devront etre écrite dans le fichier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int : nombre de manche jusqu&apos;a la victoir d&apos;une équipe </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; On change l&apos;affichage pour avoir un affichage plus simple a lire lors d&apos;une partie entre 4 ordinateur</para>
<para>&lt; a suprimer une fois de debug fini</para>
<para>&lt; Fin de partie</para>
<para>&lt; affichage des resultat</para>
<para>&lt; L&apos;utilisatuer et nord gagnent</para>
<para>&lt; est et touest gagnent</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="46" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="99" bodyend="186" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="46" declcolumn="5"/>
        <references refid="affichage_8c_1a978cd3d8ff9f4afa72856d33ad0dea81" compoundref="affichage_8c" startline="269" endline="346">afficheMenuSelection</references>
        <references refid="autre_8c_1a9028074829d59ddc4481ae51036fc9ef" compoundref="autre_8c" startline="11" endline="19">joueurSuivant</references>
        <references refid="general_8c_1a82e65877686a049b4bee9160af15c97f" compoundref="general_8c" startline="188" endline="285">manche</references>
        <references refid="autre_8c_1a1fe3fe4b2fbc888f6af5db69f6cc72f6" compoundref="autre_8c" startline="21" endline="24">nbAleatoire</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a82e65877686a049b4bee9160af15c97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char manche</definition>
        <argsstring>(char *pseudo[], int score[], Joueur dealer, Joueur utilisateur, int *pStatistique)</argsstring>
        <name>manche</name>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>dealer</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pStatistique</declname>
        </param>
        <briefdescription>
<para>lancement d&apos;une manche </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[] : tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>score[] : tableau contenant les scores des joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>dealer : joueur qui distibue les cartes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueuer</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>*pStatistique : pointeur sur un tableau 4*4 qui contient des statistique sur chaque joueur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char : 0 si tout le monde passe, 1 si la manche a bien lieu </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; tableau qui stocke les anonce de chaque joueur, on y ajoute 1 pour le roi d&apos;atout puis 1 pour la dame d&apos;atout</para>
<para>&lt; distribution des cartes</para>
<para>&lt; On cherche si les joueurs on des anonce a faire</para>
<para>&lt; On passe a la phase suivante uniquement si un contrat a ete pris sinon on relance une manche</para>
<para>&lt; si un joueur a fait une belote rebelote il gagne 20 point</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="62" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="188" bodyend="285" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="62" declcolumn="6"/>
        <references refid="general_8c_1a6eeea9d2fea8b2c504b0051af39f7c80" compoundref="general_8c" startline="287" endline="369">annonceContrat</references>
        <references refid="struct_contrat_1ae4200596d53e88a91ba06d992f4db7ee" compoundref="main_8h" startline="146">Contrat::atout</references>
        <references refid="general_8c_1ae2494afb9457cbcf96753839016abbb6" compoundref="general_8c" startline="476" endline="576">calculPointManche</references>
        <references refid="gestion_carte_8c_1ae1326a1796189845699f614535268322" compoundref="gestion_carte_8c" startline="12" endline="48">distribueCarte</references>
        <references refid="autre_8c_1a9028074829d59ddc4481ae51036fc9ef" compoundref="autre_8c" startline="11" endline="19">joueurSuivant</references>
        <references refid="struct_contrat_1a844fc99865705e23ec1eb56a03cb6d5b" compoundref="main_8h" startline="145">Contrat::nbPoint</references>
        <references refid="general_8c_1a09dedac7ae460c4fd07ebcc4af44568f" compoundref="general_8c" startline="390" endline="461">pli</references>
        <references refid="gestion_carte_8c_1a60713486558430d396e98d6090e6db23" compoundref="gestion_carte_8c" startline="435" endline="568">rechercheAnnonce</references>
        <references refid="gestion_carte_8c_1aa6ee6fa9bf13839d948e7df5f4199e0e" compoundref="gestion_carte_8c" startline="50" endline="54">setCarte</references>
        <references refid="gestion_carte_8c_1a1ae8efe125a9388197c70d15f8b08c3a" compoundref="gestion_carte_8c" startline="386" endline="402">trieCarte</references>
        <references refid="gestion_carte_8c_1aa27d92d54128016ef6bf0faee2de1eaa" compoundref="gestion_carte_8c" startline="64" endline="77">vainqueurPli</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a6eeea9d2fea8b2c504b0051af39f7c80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
        <definition>Contrat annonceContrat</definition>
        <argsstring>(char *pseudo[], Joueur dealer, Carte *pCarteMain, Joueur utilisateur)</argsstring>
        <name>annonceContrat</name>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>dealer</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pCarteMain</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <briefdescription>
<para>gère l&apos;annonce et la surenchère des contats par les joueurs </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>dealer : joueur qui distibue les cartes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pCarteMain : pointeur sur le tableau qui stocke les cartes dans la main de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueuer</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_contrat" kindref="compound">Contrat</ref> : contrat final qui a ete choisi pour la partie </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Affichage du choix du joueur</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="77" column="9" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="287" bodyend="369" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="77" declcolumn="9"/>
        <references refid="affichage_8c_1abd791297578af449761083408a1b4462" compoundref="affichage_8c" startline="247" endline="267">afficheContrat</references>
        <references refid="struct_contrat_1a70b09721ab65e7043efbd56ab0da0a2f" compoundref="main_8h" startline="147">Contrat::coinche</references>
        <references refid="autre_8c_1a9028074829d59ddc4481ae51036fc9ef" compoundref="autre_8c" startline="11" endline="19">joueurSuivant</references>
        <references refid="struct_contrat_1a844fc99865705e23ec1eb56a03cb6d5b" compoundref="main_8h" startline="145">Contrat::nbPoint</references>
        <references refid="general_8c_1abde08a751131f9afc15de6fc616348f6" compoundref="general_8c" startline="371" endline="387">proposeContrat</references>
        <references refid="autre_8c_1a1613864902e98bd6d49e9d82bedcbe1c" compoundref="autre_8c" startline="26" endline="32">setContrat</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1abde08a751131f9afc15de6fc616348f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
        <definition>Contrat proposeContrat</definition>
        <argsstring>(Contrat dernierContrat, Joueur parle, char *pseudo[], Carte *pCarteMain, Joueur utilisateur)</argsstring>
        <name>proposeContrat</name>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>dernierContrat</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>parle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pCarteMain</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <briefdescription>
<para>proposition d&apos;un contrat par un joueur </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>dernierContrat : dernier contrat proposé </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>parle : joueur qui parle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeurs contenant les pseudos des différents joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pCarteMain : pointeur sur le tableau qui stocke les cartes dans la main de chaque joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_contrat" kindref="compound">Contrat</ref> : nouveau contrat proposé par le joueur </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; acquisition par l&apos;utilisateur</para>
<para>&lt; choix par l&apos;ia d&apos;un contrat</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="91" column="10" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="371" bodyend="387" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="91" declcolumn="10"/>
        <references refid="affichage_8c_1ae37357f1035df2f6d50afb1a1c5a9947" compoundref="affichage_8c" startline="348" endline="423">proposeContratUtilisateur</references>
        <references refid="autre_8c_1a1613864902e98bd6d49e9d82bedcbe1c" compoundref="autre_8c" startline="26" endline="32">setContrat</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a09dedac7ae460c4fd07ebcc4af44568f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Joueur</type>
        <definition>Joueur pli</definition>
        <argsstring>(Contrat contrat, Joueur premierAJouer, char *pseudo[], Carte *pCarteMain, int pointManche[], int pointAnonce[], char belote[], Carte cartePli[], Carte carteAncienPli[], int score[], Joueur utilisateur, int numPli)</argsstring>
        <name>pli</name>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>contrat</declname>
        </param>
        <param>
          <type>Joueur</type>
          <declname>premierAJouer</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pCarteMain</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pointManche</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>pointAnonce</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char</type>
          <declname>belote</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>cartePli</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>carteAncienPli</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numPli</declname>
        </param>
        <briefdescription>
<para>fonction qui gère un pli </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>contrat : contrat qui a été choisipour cette manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>premierAjouer : premier joueur a jouer dans le pli </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeur contenant les pseudo des différents joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>*pCarteMain : pointeur sur le tableau qui stocke les carte dans la main de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointManche[] : tableau contenant les point de chaque joueur dans la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointAnonce[] : tableau contenant les point d&apos;anonce de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>belote[] : tableau contenant les ancone belote rebelote de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>cartePli[] : tableau contenant les 4 carte du pli </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="struct_carte" kindref="compound">Carte</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>carteAncienPli[] : tableau contenant les carte du pli précédent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>score[] : tableau qui contient les score de la partie </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Joueur : le vainceur du pli </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; interface de pli Utilisateur</para>
<para>&lt; interface de pli ordinateur</para>
<para>&lt; on regarde si une dame ou un roi d&apos;atout vien d&apos;etre jouer pour ajouter au tableau belote[]</para>
<para>&lt; affichage de la carte qui vien d&apos;etre jouée</para>
<para>&lt; 10 de der, on ajoute 10 point au vainceur si on est dans le dernier pli</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="113" column="8" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="390" bodyend="461" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="113" declcolumn="8"/>
        <references refid="affichage_8c_1a773118ff3accfbd267688f5e91f26ed7" compoundref="affichage_8c" startline="59" endline="175">afficheInterfacePli</references>
        <references refid="struct_contrat_1ae4200596d53e88a91ba06d992f4db7ee" compoundref="main_8h" startline="146">Contrat::atout</references>
        <references refid="formatage_chaine_8c_1a0a9bbb51e5f916ca5bef2365312e23be" compoundref="formatage_chaine_8c" startline="314" endline="342">genereMessage</references>
        <references refid="autre_8c_1a9028074829d59ddc4481ae51036fc9ef" compoundref="autre_8c" startline="11" endline="19">joueurSuivant</references>
        <references refid="autre_8c_1a4fab4a48512193a409dc541bb38a999c" compoundref="autre_8c" startline="34" endline="144">pointPli</references>
        <references refid="general_8c_1a6c7b2721ebd2ba9c2cdd0d452f8cbe3f" compoundref="general_8c" startline="463" endline="473">poseCarte</references>
        <references refid="gestion_carte_8c_1aa27d92d54128016ef6bf0faee2de1eaa" compoundref="gestion_carte_8c" startline="64" endline="77">vainqueurPli</references>
        <references refid="struct_carte_1ac39ffe2f53ab343a8ca8d69f777ca4c9" compoundref="main_8h" startline="130">Carte::valeur</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1a6c7b2721ebd2ba9c2cdd0d452f8cbe3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int poseCarte</definition>
        <argsstring>(Joueur joueur, int numCarte, Carte *pMainJoueurs, Carte pli[], int carteRestante)</argsstring>
        <name>poseCarte</name>
        <param>
          <type>Joueur</type>
          <declname>joueur</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numCarte</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref> *</type>
          <declname>pMainJoueurs</declname>
        </param>
        <param>
          <type><ref refid="struct_carte" kindref="compound">Carte</ref></type>
          <declname>pli</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>carteRestante</declname>
        </param>
        <briefdescription>
<para>fonction qui verifie la validité d&apos;une carte est la pose </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>variable qui defini la position du joueur qui effectue l&apos;action </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numCarte</parametername>
</parameternamelist>
<parameterdescription>
<para>variable qui defini la carte choisie par le joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pMainJoueurs</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointeur qui renvoie vers le tableau de la main de tous les joueurs </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pPli</parametername>
</parameternamelist>
<parameterdescription>
<para>: pointeur qui renvoie vers le tableau des carte jouées dans le pli </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="127" column="5" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="463" bodyend="473" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="127" declcolumn="5"/>
        <references refid="general_8c_1a09dedac7ae460c4fd07ebcc4af44568f" compoundref="general_8c" startline="390" endline="461">pli</references>
        <references refid="gestion_carte_8c_1aa6ee6fa9bf13839d948e7df5f4199e0e" compoundref="gestion_carte_8c" startline="50" endline="54">setCarte</references>
        <references refid="gestion_carte_8c_1a77b2ed8ac4298678feea52baa2e9cf0e" compoundref="gestion_carte_8c" startline="56" endline="62">supprimeCarte</references>
        <references refid="struct_carte_1ac39ffe2f53ab343a8ca8d69f777ca4c9" compoundref="main_8h" startline="130">Carte::valeur</references>
      </memberdef>
      <memberdef kind="function" id="general_8h_1ae2494afb9457cbcf96753839016abbb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char calculPointManche</definition>
        <argsstring>(Contrat contrat, int pointManche[], int pointAnonce[], int pointBelote[], int score[], char *pseudo[], Joueur utilisateur)</argsstring>
        <name>calculPointManche</name>
        <param>
          <type><ref refid="struct_contrat" kindref="compound">Contrat</ref></type>
          <declname>contrat</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pointManche</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>pointAnonce</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>pointBelote</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>score</declname>
          <array>[]</array>
        </param>
        <param>
          <type>char *</type>
          <declname>pseudo</declname>
          <array>[]</array>
        </param>
        <param>
          <type>Joueur</type>
          <declname>utilisateur</declname>
        </param>
        <briefdescription>
<para>compte les point gagné par chaque joueur au cour de la manche e fonction du contrat et ajoute ces point au tableau qui contient tout les score de la partie </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="struct_contrat" kindref="compound">Contrat</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>contrat : contrat qui a été choisi durant la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointManche[] : tableau qui contient les points de la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointAnonce[] : tableau qui contient les points d&apos;anonce de la manche </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>pointBelote[] : tableau contenant les point de belote rebelote de chaque joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>score[] : tableau qui contient les score de la partie </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>char</parametername>
</parameternamelist>
<parameterdescription>
<para>*pseudo[]: tableau de pointeur contenant les pseudo des différents joueur </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Joueur</parametername>
</parameternamelist>
<parameterdescription>
<para>utilisateur : donne la position de l&apos;utilisateur, mettre SANS_Joueur pour faire une partie avec uniquement des ordinateur </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>char : 1 si le contrtat a été réussi et 0 si le contrat a échoué </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; On reche si le contrat est rampli</para>
<para>&lt; cas ou un des joueur a pris un capot</para>
<para>&lt; cas ou un des joueur a pris une générale</para>
<para>&lt; Le contrat est rempli si le les point de l&apos;équipe est suppérieur a ce qui anoncé et si il on 82 point sans les anonces</para>
<para>&lt; on affiche ce qui c&apos;est passé</para>
        </inbodydescription>
        <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" line="144" column="6" bodyfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.c" bodystart="476" bodyend="576" declfile="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h" declline="144" declcolumn="6"/>
        <references refid="affichage_8c_1a978cd3d8ff9f4afa72856d33ad0dea81" compoundref="affichage_8c" startline="269" endline="346">afficheMenuSelection</references>
        <references refid="struct_contrat_1a70b09721ab65e7043efbd56ab0da0a2f" compoundref="main_8h" startline="147">Contrat::coinche</references>
        <references refid="autre_8c_1a9028074829d59ddc4481ae51036fc9ef" compoundref="autre_8c" startline="11" endline="19">joueurSuivant</references>
        <references refid="struct_contrat_1a844fc99865705e23ec1eb56a03cb6d5b" compoundref="main_8h" startline="145">Contrat::nbPoint</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ficher header contenant les prototypes des fonctions les plus impotantes pour le jeu de la belote </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Carlo.A &amp; Florian.C </para>
</simplesect>
<simplesect kind="version"><para>v1.0 </para>
</simplesect>
<simplesect kind="date"><para>12 juin 2020 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_GENERAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GENERAL_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="general_8h_1a7a3238715d030c42dde5f4539c9ca3b3" kindref="member">initialisation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbLigneFenetre,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbColloneFenetre);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="general_8h_1adfbaa271f44d828c6a42ce7e9affee88" kindref="member">menuPrincipal</ref><sp/>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="general_8h_1a1faac25606ba09c4cdbcf54a142dbe0c" kindref="member">nouvellePartie</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/>Joueur<sp/>utilisateur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pStatistique,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>infoEcritureFicher[]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="general_8h_1a82e65877686a049b4bee9160af15c97f" kindref="member">manche</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score[],<sp/>Joueur<sp/>dealer,<sp/>Joueur<sp/>utilisateur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pStatistique);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/><ref refid="general_8h_1a6eeea9d2fea8b2c504b0051af39f7c80" kindref="member">annonceContrat</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/>Joueur<sp/>dealer,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pCarteMain,<sp/>Joueur<sp/>utilisateur);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/><ref refid="general_8h_1abde08a751131f9afc15de6fc616348f6" kindref="member">proposeContrat</ref>(<ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>dernierContrat,<sp/>Joueur<sp/>parle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pCarteMain,<sp/>Joueur<sp/>utilisateur);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">Joueur<sp/><ref refid="general_8h_1a09dedac7ae460c4fd07ebcc4af44568f" kindref="member">pli</ref>(<ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>contrat,<sp/>Joueur<sp/>premierAJouer,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pCarteMain,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointManche[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointAnonce[],<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>belote[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>cartePli[],<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>carteAncienPli[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score[],<sp/>Joueur<sp/>utilisateur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPli);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="general_8h_1a6c7b2721ebd2ba9c2cdd0d452f8cbe3f" kindref="member">poseCarte</ref><sp/>(Joueur<sp/>joueur,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCarte,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/>*pMainJoueurs,<sp/><ref refid="struct_carte" kindref="compound">Carte</ref><sp/><ref refid="general_8h_1a09dedac7ae460c4fd07ebcc4af44568f" kindref="member">pli</ref>[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>carteRestante);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="general_8h_1ae2494afb9457cbcf96753839016abbb6" kindref="member">calculPointManche</ref>(<ref refid="struct_contrat" kindref="compound">Contrat</ref><sp/>contrat,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointManche[],</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointAnonce[],</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointBelote[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score[],</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pseudo[],<sp/>Joueur<sp/>utilisateur);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>_GENERAL_H_</highlight></codeline>
    </programlisting>
    <location file="C:/Users/flocl/OneDrive - Universite De Technologie De Belfort-Montbeliard/UTBM/TC-02/IFB/projet belote/IFB_projet_Belote/IFB_projet/general.h"/>
  </compounddef>
</doxygen>
