.TH "autre.h" 3 "Sun Jun 14 2020" "Version V1.0" "IFB_projet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
autre.h \- ficher header contenant les prototype des fonctions qui n'allait dans aucun autre fichier  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "Joueur \fBjoueurSuivant\fP (Joueur joueur)"
.br
.RI "passe au joueur suivant "
.ti -1c
.RI "int \fBnbAleatoire\fP (int mini, int maxi)"
.br
.RI "renvoit in nombre aléatoire entre deux bornes "
.ti -1c
.RI "void \fBsetContrat\fP (\fBContrat\fP *contrat, Joueur preneur, int nbPoint, Couleur atout, Coinche coinche)"
.br
.RI "définit un contrat "
.ti -1c
.RI "int \fBpointPli\fP (\fBCarte\fP \fBpli\fP[], Couleur atout, int nbCarte)"
.br
.RI "compte le nombre de points d'un pli "
.ti -1c
.RI "float \fBajusteEchelle\fP (float valeur, float entreMin, float entreMax, float sortieMin, float sortieMax)"
.br
.RI "met a l'echelle la valeur d'une variable comprise entre deux bornes pour que la variable de retour soit compris entre deux autres bornes "
.ti -1c
.RI "void \fBjoue1000Partie\fP (int nbPartie)"
.br
.RI "joue n partie aves uniquement des ia pour controler si tout ce passe bien et reuceillir des statistique "
.in -1c
.SH "Detailed Description"
.PP 
ficher header contenant les prototype des fonctions qui n'allait dans aucun autre fichier 


.PP
\fBAuthor\fP
.RS 4
Carlo\&.A & Florian\&.C 
.RE
.PP
\fBVersion\fP
.RS 4
v1\&.0 
.RE
.PP
\fBDate\fP
.RS 4
12 juin 2020 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "float ajusteEchelle (float valeur, float entreMin, float entreMax, float sortieMin, float sortieMax)"

.PP
met a l'echelle la valeur d'une variable comprise entre deux bornes pour que la variable de retour soit compris entre deux autres bornes 
.PP
\fBParameters\fP
.RS 4
\fIfloat\fP valeur : valeur a mettre à l'echelle 
.br
\fIfloat\fP entreMin : valeur minimum que peut prendre l'entrée 
.br
\fIfloat\fP entreMax : valeur maximum que peut prendre l'entrée 
.br
\fIfloat\fP sortieMin : valeur minimum que peut prendre la sortie 
.br
\fIfloat\fP sortieMax : valeur maximum que peut prendre la sortie 
.RE
.PP
\fBReturns\fP
.RS 4
float : la valeur de valeur une fois mise a l'echelle 
.RE
.PP

.SS "void joue1000Partie (int nbPartie)"

.PP
joue n partie aves uniquement des ia pour controler si tout ce passe bien et reuceillir des statistique 
.PP
\fBParameters\fP
.RS 4
\fIint\fP nbPartie nombre de partie que l'on veut jouer 
.RE
.PP
\fBReturns\fP
.RS 4
voir 
.RE
.PP

.SS "Joueur joueurSuivant (Joueur joueur)"

.PP
passe au joueur suivant 
.PP
\fBParameters\fP
.RS 4
\fIJoueur\fP joueur : joueur actuel 
.RE
.PP
\fBReturns\fP
.RS 4
Joueur : le joueur suivant 
.RE
.PP

.SS "int nbAleatoire (int mini, int maxi)"

.PP
renvoit in nombre aléatoire entre deux bornes 
.PP
\fBParameters\fP
.RS 4
\fIint\fP mini : borne inférieur 
.br
\fIint\fP maxi : borne surpérieur 
.RE
.PP
\fBReturns\fP
.RS 4
int : le nombre aléatoire 
.RE
.PP

.SS "int pointPli (\fBCarte\fP pli[], Couleur atout, int nbCarte)"

.PP
compte le nombre de points d'un pli 
.PP
\fBParameters\fP
.RS 4
\fI\fBCarte\fP\fP pli []: tableau des cartes possées dont on doit faire la somme des points 
.br
\fICouleur\fP atout: couleur de l'atout joué dans la manche 
.br
\fInbCarte\fP nombre de carte à compter 
.RE
.PP
\fBReturns\fP
.RS 4
points 
.RE
.PP

.SS "void setContrat (\fBContrat\fP * contrat, Joueur preneur, int nbPoint, Couleur atout, Coinche coinche)"

.PP
définit un contrat 
.PP
\fBParameters\fP
.RS 4
\fIContat\fP *contrat : pointeur sur le contrat a modifier 
.br
\fIJoueur\fP preneur : preneur du contrat 
.br
\fIint\fP nbPoint : nombre de point 
.br
\fICouleur\fP atout : couleur de l'aout 
.br
\fICoinche\fP coinche : normal, coinché , surcoinché 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for IFB_projet from the source code\&.
