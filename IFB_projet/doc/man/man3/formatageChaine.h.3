.TH "formatageChaine.h" 3 "Sun Jun 14 2020" "Version V1.0" "IFB_projet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
formatageChaine.h \- ficher header contenant les prototypes des fonctions relative au formatage  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcentreChaine\fP (char chaineInitial[], char chaineFinal[], int longeurChaine)"
.br
.RI "transphorme une chaine de caractère de longeur inconue en une chaine de caratère fixé de tel sorte que le texte soit centré "
.ti -1c
.RI "int \fBcentreModifieChaine\fP (char chaine[], int longeurChaine)"
.br
.RI "transforme une chaine de cararactère en sa vertion centrée "
.ti -1c
.RI "int \fBdecoupeChaine\fP (char chaineInitiale[], char *chaineFinale, int tailleLigne, int nbLigne)"
.br
.RI "fontion qui permet de découper une chaine de caracère en plusieur chaine de taille fixée en coupant sur un espace "
.ti -1c
.RI "void \fBrempliEspace\fP (char *chaine, int nbEspace)"
.br
.RI "rempli une chaine de caractère de nbEspace caractère espace ' ' "
.ti -1c
.RI "void \fBformateCarte\fP (\fBCarte\fP carte[], char *chaineFinale, int nbCarte, int tailleChaine, int version)"
.br
.RI "formate les chaine de caracère qui affiche la valeur et la couleur des cartes "
.ti -1c
.RI "void \fBstockeInfoCarte\fP (\fBCarte\fP carte, char *valeur, char *couleur, int version, int tailleChaine)"
.br
.RI "met dans une chaine de caractère la valeur et la couleur d'une carte "
.ti -1c
.RI "void \fBformatePseudo\fP (Joueur joueur, char *pseudo[], int tailleChaine, char chaineFinal[], int version)"
.br
.RI "stocke dans une chaine de caractère le pseudo d'un des joueur "
.ti -1c
.RI "void \fBformateContrat\fP (\fBContrat\fP contrat, char *chaineFinal, int tailleLigne, char *pseudo[])"
.br
.RI "stocke dans des chaine de caractère les info du contrat "
.ti -1c
.RI "int \fBaligneModifieChaine\fP (char chaine[], int longeurChaine)"
.br
.RI "transforme une chaine de cararactère en sa vertion aligné a gauche "
.ti -1c
.RI "void \fBgenereMessage\fP (char message[], Joueur parle, char *pseudo[], \fBCarte\fP carteJoue, int score, TypeMessage typeMessage)"
.br
.RI "génere un message et l'enregistre dans une chaine de caractère "
.in -1c
.SH "Detailed Description"
.PP 
ficher header contenant les prototypes des fonctions relative au formatage 


.PP
\fBAuthor\fP
.RS 4
Carlo\&.A & Florian\&.C 
.RE
.PP
\fBVersion\fP
.RS 4
v1\&.0 
.RE
.PP
\fBDate\fP
.RS 4
12 juin 2020 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "int aligneModifieChaine (char chaine[], int longeurChaine)"

.PP
transforme une chaine de cararactère en sa vertion aligné a gauche 
.PP
\fBParameters\fP
.RS 4
\fIchar\fP chaine : chaine a modifier 
.br
\fIint\fP longeurChaine 
.RE
.PP
\fBReturns\fP
.RS 4
int : 0 si tout c'est bien passé 
.RE
.PP

.SS "int centreChaine (char chaineInitial[], char chaineFinal[], int longeurChaine)"

.PP
transphorme une chaine de caractère de longeur inconue en une chaine de caratère fixé de tel sorte que le texte soit centré 
.PP
\fBParameters\fP
.RS 4
\fIchar\fP chaineInitial : chaine a modifier 
.br
\fIchar\fP chaineFinal : pointeur vers la variable qui stocke la chainne final 
.br
\fIint\fP longeurChaine : longeur de la chaine final 
.RE
.PP
\fBReturns\fP
.RS 4
int : 0 si tout va bien, 1 si la chaine est Initiale test plus longue que la longeur désirée 
.RE
.PP

.SS "int centreModifieChaine (char chaine[], int longeurChaine)"

.PP
transforme une chaine de cararactère en sa vertion centrée 
.PP
\fBParameters\fP
.RS 4
\fIchar\fP chaine : chaine a modifier 
.br
\fIint\fP longeurChaine 
.RE
.PP
\fBReturns\fP
.RS 4
int : 0 si tout c'est bien passé 
.RE
.PP

.SS "int decoupeChaine (char chaineInitiale[], char * chaineFinale, int tailleLigne, int nbLigne)"

.PP
fontion qui permet de découper une chaine de caracère en plusieur chaine de taille fixée en coupant sur un espace 
.PP
\fBParameters\fP
.RS 4
\fIchaineInitiale[]\fP : chaine a decouper 
.br
\fIchaineFinale[][]\fP : tableau contenant les chaine un fois découpé 
.br
\fItailleLigne\fP : nobre de caracète maximun par ligne 
.br
\fInbLinge\fP : nombre maximun de ligne 
.RE
.PP
\fBReturns\fP
.RS 4
0 si tout va bien 1 si la chaine est trop longue 
.RE
.PP

.SS "void formateCarte (\fBCarte\fP carte[], char * chaineFinale, int nbCarte, int tailleChaine, int version)"

.PP
formate les chaine de caracère qui affiche la valeur et la couleur des cartes 
.PP
\fBParameters\fP
.RS 4
\fIchaineFinale[][][]\fP tableau a trois dimention qui stocke les chaine de caracère de la valeur et la couleurs des cartes 
.br
\fIcarte[]\fP : tableau de typpe \fBCarte\fP contenant les carte a afficher 
.br
\fInbCarte\fP : nombre de carte dans le tableau carte[] 
.br
\fItailleChaine\fP : taille des chaineFinale 
.br
\fIversion\fP : 0 si c'est la verion courte et 1 pour la verision longue 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void formateContrat (\fBContrat\fP contrat, char * chaineFinal, int tailleLigne, char * pseudo[])"

.PP
stocke dans des chaine de caractère les info du contrat 
.PP
\fBParameters\fP
.RS 4
\fI\fBContrat\fP\fP contrat : contrat a afficher 
.br
\fIchar\fP *chainefinal : chaine final ou on enregistre les info du contrat 
.br
\fIint\fP tailleLigne : taille d'une ligne 
.br
\fIchar\fP *pseudo[] : tableau qui contient les pseudo des joueur 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void formatePseudo (Joueur joueur, char * pseudo[], int tailleChaine, char chaineFinal[], int version)"

.PP
stocke dans une chaine de caractère le pseudo d'un des joueur 
.PP
\fBParameters\fP
.RS 4
\fIJoueur\fP joueur : joueur dont on veut afficher le pseudo 
.br
\fIchar\fP *pseudo[] : tableau contennant les pseudo des joueur 
.br
\fIint\fP tailleChaine : taille de la chaine final 
.br
\fIchar\fP chaineFinal[] : chaine final ou est stocké le pseudo 
.br
\fIint\fP varsion : 1 pour la version ou la chaine finale est centrée 0 pour l'aligné a gauche 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void genereMessage (char message[], Joueur parle, char * pseudo[], \fBCarte\fP carteJoue, int score, TypeMessage typeMessage)"

.PP
génere un message et l'enregistre dans une chaine de caractère 
.PP
\fBParameters\fP
.RS 4
\fIchar\fP message[] : tableau de char ou on enregistre le message 
.br
\fIJoueur\fP parle : joueur qui pose une carte 
.br
\fIchar\fP *pseudo[] : tableau qui contient les pseudo des joueur 
.br
\fI\fBCarte\fP\fP carteJoue : carte qui vine d'être jouée 
.br
\fIint\fP score : score a afficher 
.br
\fITypeMessage\fP typeMessage : permet de savoir quelle message on veux afficher 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void rempliEspace (char * chaine, int nbEspace)"

.PP
rempli une chaine de caractère de nbEspace caractère espace ' ' 
.PP
\fBParameters\fP
.RS 4
\fIchaine[]\fP : chaine a remplir; 
.br
\fInbEspace[]\fP : nombre d'espaca a placer dans la chaine 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void stockeInfoCarte (\fBCarte\fP carte, char * valeur, char * couleur, int version, int tailleChaine)"

.PP
met dans une chaine de caractère la valeur et la couleur d'une carte 
.PP
\fBParameters\fP
.RS 4
\fIcarte\fP : variable de type carte qui contient la carte a afficher 
.br
\fIvaleur\fP : pointeur vers la chaine qui stocke la valeur (ou la valeur et la couleur si mode court) 
.br
\fIcouleur\fP : pointeur vers la chaine qui stocke la couleur 
.br
\fIvesion\fP : 0 si c'est la version courte et 1 pour la version longue 
.br
\fItailleChaine\fP : taille de la chaine de caratère dans laquel on écrit 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for IFB_projet from the source code\&.
